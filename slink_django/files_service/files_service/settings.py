"""
Django settings for files_service project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('FILES_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG')
ALLOWED_HOSTS = ['user-service', 'files-service', 'localhost', '127.0.0.1', '0.0.0.0']


TIME_ZONE = os.environ.get('TIME_ZONE')
USE_TZ = True
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'files',
]

AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.environ.get('AWS_STORAGE_BUCKET_NAME')
AWS_S3_ENDPOINT_URL = os.environ.get('AWS_S3_ENDPOINT_URL')
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}
AWS_DEFAULT_ACL = os.environ.get('AWS_DEFAULT_ACL')
AWS_S3_REGION_NAME = os.environ.get('AWS_S3_REGION_NAME')

STATIC_URL = 'static/'
# Для статики
# AWS_LOCATION = 'static'
# STATIC_URL = f'https://{AWS_S3_ENDPOINT_URL}/{AWS_LOCATION}/'
# STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
#
# # Для медиа
# PUBLIC_MEDIA_LOCATION = 'media'
# MEDIA_URL = f'https://{AWS_S3_ENDPOINT_URL}/{PUBLIC_MEDIA_LOCATION}/'
DEFAULT_FILE_STORAGE = 'files.storages.PublicMediaStorage'
# PRIVATE_MEDIA_LOCATION = 'private'
# PRIVATE_FILE_STORAGE = 'files.storages.PrivateMediaStorage'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'files_service.urls'

WSGI_APPLICATION = 'files_service.wsgi.application'


RABBITMQ_USER = os.environ.get('RABBITMQ_USER')
RABBITMQ_PASSWORD = os.environ.get('RABBITMQ_PASSWORD')
RABBITMQ_SERVICES_VHOST = os.environ.get('RABBITMQ_SERVICES_VHOST')
RABBITMQ_CELERY_VHOST = os.environ.get('RABBITMQ_CELERY_VHOST')
RABBITMQ_PORT = os.environ.get('RABBITMQ_PORT')
RABBITMQ_MANAGEMENT_PORT = os.environ.get('RABBITMQ_MANAGEMENT_PORT')
RABBITMQ_HOST = os.environ.get('RABBITMQ_HOST')

REDIS_RESULT_BACKEND_PASSWORD = os.environ.get('REDIS_RESULT_BACKEND_PASSWORD')
REDIS_RESULT_BACKEND_HOST = os.environ.get('REDIS_RESULT_BACKEND_HOST')
REDIS_RESULT_BACKEND_PORT = '6379'

CELERY_BROKER_URL = f'amqp://{RABBITMQ_USER}:{RABBITMQ_PASSWORD}@{RABBITMQ_HOST}:{RABBITMQ_PORT}/{RABBITMQ_CELERY_VHOST}'

CELERY_RESULT_BACKEND = f'redis://:{REDIS_RESULT_BACKEND_PASSWORD}@{REDIS_RESULT_BACKEND_HOST}:{REDIS_RESULT_BACKEND_PORT}/0'

CELERY_TASK_DEFAULT_QUEUE = 'default_queue'
CELERY_TASK_DEFAULT_EXCHANGE = 'default_exchange'
CELERY_TASK_DEFAULT_ROUTING_KEY = 'default_routing_key'

CELERY_TASK_TIME_LIMIT = 60*5

CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_TRACK_STARTED = True
CELERY_TIMEZONE = TIME_ZONE
CELERY_ENABLE_UTC = False
CELERY_IGNORE_RESULT = False

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REDIS_FILES_PASSWORD= os.environ.get('REDIS_FILES_PASSWORD')
REDIS_FILES_HOST = os.environ.get('REDIS_FILES_HOST')
REDIS_FILES_PORT = '6379'