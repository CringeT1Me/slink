"""
Django settings for friendship_service project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('FRIENDSHIP_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG')

ALLOWED_HOSTS = []

TIME_ZONE = os.environ.get('TIME_ZONE')
USE_TZ = True

# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    'django.contrib.contenttypes',
    # 'django.contrib.messages',

    'friendship',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'friendship_service.urls'

WSGI_APPLICATION = 'friendship_service.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('POSTGRES_FRIENDSHIP_NAME'),
        'USER': os.environ.get('POSTGRES_FRIENDSHIP_USER'),
        'PASSWORD': os.environ.get('POSTGRES_FRIENDSHIP_PASSWORD'),
        'HOST': os.environ.get('POSTGRES_FRIENDSHIP_HOST'),  # Хост (локальный)
        'PORT': 5432,  # Порт PostgreSQL
    }
}

RABBITMQ_USER = os.environ.get('RABBITMQ_USER')
RABBITMQ_PASSWORD = os.environ.get('RABBITMQ_PASSWORD')
RABBITMQ_SERVICES_VHOST = os.environ.get('RABBITMQ_SERVICES_VHOST')
RABBITMQ_CELERY_VHOST = os.environ.get('RABBITMQ_CELERY_VHOST')
RABBITMQ_PORT = os.environ.get('RABBITMQ_PORT')
RABBITMQ_MANAGEMENT_PORT = os.environ.get('RABBITMQ_MANAGEMENT_PORT')
RABBITMQ_HOST = os.environ.get('RABBITMQ_HOST')

REDIS_RESULT_BACKEND_PASSWORD = os.environ.get('REDIS_RESULT_BACKEND_PASSWORD')
REDIS_RESULT_BACKEND_HOST = os.environ.get('REDIS_RESULT_BACKEND_HOST')
REDIS_RESULT_BACKEND_PORT = '6379'

CELERY_BROKER_URL = f'amqp://{RABBITMQ_USER}:{RABBITMQ_PASSWORD}@{RABBITMQ_HOST}:{RABBITMQ_PORT}/{RABBITMQ_CELERY_VHOST}'

CELERY_RESULT_BACKEND = f'redis://:{REDIS_RESULT_BACKEND_PASSWORD}@{REDIS_RESULT_BACKEND_HOST}:{REDIS_RESULT_BACKEND_PORT}/0'

CELERY_TASK_DEFAULT_QUEUE = 'default_queue'
CELERY_TASK_DEFAULT_EXCHANGE = 'default_exchange'
CELERY_TASK_DEFAULT_ROUTING_KEY = 'default_routing_key'

CELERY_TASK_TIME_LIMIT = 60*5

CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_TRACK_STARTED = True
CELERY_TIMEZONE = TIME_ZONE
CELERY_ENABLE_UTC = False
CELERY_IGNORE_RESULT = False

REDIS_FRIENDSHIP_PASSWORD= os.environ.get('REDIS_FRIENDSHIP_PASSWORD')
REDIS_FRIENDSHIP_HOST = os.environ.get('REDIS_FRIENDSHIP_HOST')
REDIS_FRIENDSHIP_PORT = os.environ.get('REDIS_FRIENDSHIP_PORT')

STATIC_URL = 'static/'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
