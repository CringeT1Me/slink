"""
Django settings for posts_service project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECURITY WARNING: don't run with debug turned on in production!
SECRET_KEY = os.environ.get('POSTS_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG')
ALLOWED_HOSTS = ['posts-service', 'localhost']


TIME_ZONE = os.environ.get('TIME_ZONE')
USE_TZ = True
DATETIME_FORMAT = '%d-%m-%Y %H:%M:%S'

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'rest_framework_simplejwt',
    
    'posts',
    'albums',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'posts_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'posts_service.wsgi.application'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTStatelessUserAuthentication',
    )
}

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('POSTGRES_POSTS_NAME'),
        'USER': os.environ.get('POSTGRES_POSTS_USER'),
        'PASSWORD': os.environ.get('POSTGRES_POSTS_PASSWORD'),
        'HOST': os.environ.get('POSTGRES_POSTS_HOST'),  # Хост (локальный)
        'PORT': 5432,  # Порт PostgreSQL
    }
}

RABBITMQ_USER = os.environ.get('RABBITMQ_USER')
RABBITMQ_PASSWORD = os.environ.get('RABBITMQ_PASSWORD')
RABBITMQ_SERVICES_VHOST = os.environ.get('RABBITMQ_SERVICES_VHOST')
RABBITMQ_CELERY_VHOST = os.environ.get('RABBITMQ_CELERY_VHOST')
RABBITMQ_PORT = os.environ.get('RABBITMQ_PORT')
RABBITMQ_MANAGEMENT_PORT = os.environ.get('RABBITMQ_MANAGEMENT_PORT')
RABBITMQ_HOST = os.environ.get('RABBITMQ_HOST')

REDIS_RESULT_BACKEND_PASSWORD = os.environ.get('REDIS_RESULT_BACKEND_PASSWORD')
REDIS_RESULT_BACKEND_HOST = os.environ.get('REDIS_RESULT_BACKEND_HOST')
REDIS_RESULT_BACKEND_PORT = '6379'

CELERY_BROKER_URL = f'amqp://{RABBITMQ_USER}:{RABBITMQ_PASSWORD}@{RABBITMQ_HOST}:{RABBITMQ_PORT}/{RABBITMQ_CELERY_VHOST}'

CELERY_RESULT_BACKEND = f'redis://:{REDIS_RESULT_BACKEND_PASSWORD}@{REDIS_RESULT_BACKEND_HOST}:{REDIS_RESULT_BACKEND_PORT}/0'

CELERY_TASK_DEFAULT_QUEUE = 'default_queue'
CELERY_TASK_DEFAULT_EXCHANGE = 'default_exchange'
CELERY_TASK_DEFAULT_ROUTING_KEY = 'default_routing_key'

CELERY_TASK_TIME_LIMIT = 60*5

CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_TRACK_STARTED = True
CELERY_TIMEZONE = TIME_ZONE
CELERY_ENABLE_UTC = False
CELERY_IGNORE_RESULT = False

REDIS_POSTS_PASSWORD= os.environ.get('REDIS_POSTS_PASSWORD')
REDIS_POSTS_HOST = os.environ.get('REDIS_POSTS_HOST')
REDIS_POSTS_PORT = '6379'

LANGUAGE_CODE = 'en-us'

SIMPLE_JWT = {
    "ALGORITHM": "HS256",
    "SIGNING_KEY": os.environ.get('JWT_SECRET'),
    "VERIFYING_KEY": "",
    "AUDIENCE": None,
    "ISSUER": 'user_service',
    "JSON_ENCODER": None,
    "JWK_URL": None,
    "LEEWAY": 0,

    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION",
    "USER_ID_FIELD": "id",
    "USER_ID_CLAIM": "user_id",
    "USER_AUTHENTICATION_RULE": "rest_framework_simplejwt.authentication.default_user_authentication_rule",

    "AUTH_TOKEN_CLASSES": ("rest_framework_simplejwt.tokens.AccessToken",),
    "TOKEN_TYPE_CLAIM": "token_type",
    "TOKEN_USER_CLASS": "rest_framework_simplejwt.models.TokenUser",

    "JTI_CLAIM": "jti",

    "SLIDING_TOKEN_REFRESH_EXP_CLAIM": "refresh_exp",
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
